services:
  db:
    image: postgres:13.22
    container_name: HOST
    env_file:
      - .env_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - db_app_connect
    
  app:
    build: .
    depends_on:
      - db
    env_file:
      - .env_app
    networks:
      - db_app_connect

  nginx_proxy:
    image: nginx:alpine
    container_name: reverse_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - db_app_connect


volumes:
  db_data:

networks:
  db_app_connect:
    driver: bridge
